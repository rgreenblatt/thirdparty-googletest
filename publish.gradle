apply plugin: 'maven-publish'

// Ensure that the WPILibVersioningPlugin is setup by setting the release type, if releaseType wasn't
// already specified on the command line
if (!hasProperty('releaseType')) {
    WPILibVersion {
        releaseType = 'OFFICIAL'
    }
}

ext.licenseFile = files("$rootDir/LICENSE.txt")

def pubVersion = '1.8.0'
//if(ext.hasProperty("gtestVersion")){
//    pubVersion = ext.gtestVersion
//}
//else{
//    pubVersion = WPILibVersion.version
//}

def outputsFolder = file("$buildDir/allOutputs")

def versionFile = file("$outputsFolder/version.txt")

task outputVersions() {
    description = 'Prints the versions of wpilib to a file for use by the downstream packaging project'
    group = 'Build'
    outputs.files(versionFile)

    doFirst {
        buildDir.mkdir()
        outputsFolder.mkdir()
    }

    doLast {
        versionFile.write pubVersion
    }
}

task libraryBuild() {}

build.dependsOn outputVersions

task copyAllOutputs(type: Copy) {
    destinationDir outputsFolder
}

build.dependsOn copyAllOutputs
copyAllOutputs.dependsOn outputVersions

ext.addTaskToCopyAllOutputs = { task ->
    copyAllOutputs.dependsOn task
    copyAllOutputs.inputs.file task.archivePath
    copyAllOutputs.from task.archivePath
}

def baseArtifactId = 'gtest'
def artifactGroupId = 'com.ctre.phoenix'
def zipBaseName = '_GROUP_com_ctre_phoenix_ID_gtest_CLS'

task cppHeadersZip(type: Zip) {
    destinationDir = outputsFolder
    baseName = zipBaseName
    classifier = "headers"

    from(licenseFile) {
        into '/'
    }

    from('googletest/googletest/include') {
        into '/'
    }
}

build.dependsOn cppHeadersZip
addTaskToCopyAllOutputs(cppHeadersZip)

model {
    publishing {
        def gtestTaskList = createComponentZipTasks($.components, 'googletest', zipBaseName, Zip, project, includeStandardZipFormat)
        def allTask
        if (!project.hasProperty('jenkinsBuild')) {
            allTask = createAllCombined(gtestTaskList, 'googletest', zipBaseName, Zip, project)
        }

        publications {
            cpp(MavenPublication) {
                gtestTaskList.each {
                    artifact it
                }
                if (!project.hasProperty('jenkinsBuild')) {
                    artifact allTask
                }
                artifact cppHeadersZip

                artifactId = baseArtifactId
                groupId artifactGroupId
                version pubVersion
            }
        }
    }
}
